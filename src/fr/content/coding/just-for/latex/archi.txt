this::
    date = 2023-11-17


abrev::
    content = :this.name:

    bdocdate = date::''2023-11-11''


==================
Coder efficacement
==================

Pour les explications, nous utiliserons des exemples de projets fictifs ayant tous une structure globale similaire à la suivante comme indiqué dans cf::''?/coding/archi.txt''
((
    L'absence de dossier path::''doc'' pour la \doc "utilisateur" vient d'un processus de rédaction de cette dernière très particulier pour les \projs \latex comme cela est expliqué dans cf::''?/latex/the-docs.txt''.
))
avec en plus un dossier optionnel path::''showcase'' spécifique aux projets \latex.

dirtree::
    + fict-proj
        * about.yaml
        * README.md
        + changes     [...]
        + contribute  [...]
        + src         [...]
        + showcase    [...]
        + tests       [...]
        + tools       [...]


note::
    Se reporter à cf::''?/coding/archi.txt'' pour des explications à propos des composants généralistes suivants.

        * Fichier \readme.

        * Journal des \chgts \techs dans le dossier path::''changes''.

        * Outils spécifiques d'automatisation mis dans le dossier path::''tools''.


Quatre types de \proj sont possibles.

    1) Un \pack autonome.

    1) Un \pack "agrégateur" réunissant différents \packs.

    1) Une classe de \mef.

    1) Un \pack et une classe de \mef portant le même nom
    ((
        \latex permet cela, et dans certains cas ceci fait totalement sens.
    )).


Il est \tmps de passer à des explications détaillées.


content::
    \content/about-main.txt
    \content/the-src.txt
    \content/showcase.txt
