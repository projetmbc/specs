this::
    date = 2023-11-08


=======================
Des fichiers ressources
=======================

Pour certains \projs, il devient pratique de pouvoir faire appel à des fichiers ressources : fichiers de \conf, images, graphiques \tikz... \etc.
Ceci se fait très naturellement lors du codage à condition de savoir comment seront recollés les différents morceaux dans le \proj final afin d'éviter certaines déconvenues.


Considérons l'exemple fictif suivant où les dossiers path::''images'' et path::''graphics'' sont juste utilisés par les fichiers ext::''tex'' destinés à fabriquer la \doc "humaine"
((
    On aborde ce sujet dans cf::''?/archi/the-docs.txt''.
)),
tandis que les fichiers de \config path::''fictproj-speval.cfg'' et path::''fictproj-stdval.cfg'' ne sont utiles qu'au code \src du \pack.

dirtree::
    ---
    path = ?/example/resource/dirtree-init.txt
    ---


Après analyse de \texfacto, deux dossiers path::''fict-proj/fictproj''
((
    Noter la normalisation du nom verb::''fict-proj'' en verb::''fictproj'', ce dernier étant accepté par \latex.
)),
et path::''fict-proj/.tmpdoc'' seront créés, ou mis à jour ; nous aurons alors un contenu partiel du type suivant
((
    Le contenu et l'utilité du dossier path::''.tmpdoc'' sont donnés dans cf::''?/archi/the-docs.txt''.
)).

dirtree::
    ---
    path = ?/example/resource/dirtree-final-no-doc.txt
    ---


Voici les pièges tendus par la procédure d'automatisation (heureusement en cas de souci, \texfacto lèvera un message d'erreur).

    1) \Ttes les ressources sont à placer au même niveau que les fichiers ext::''sty'' \etou ext::''cls'' du code \src
    ((
        Se souvenir que \ctan utilise une \struct virtuelle plate.
    )).
    Même pour du code \latex, il est conseillé d'utiliser une extension autre que ext::''sty'' pour ne pas créer de conflit avec des \packs existants.
    Il est aussi conseiller d'utiliser le nom du \pack comme préfixe.

    1) La \struct des ressources pour le fichier final path::''fictproj.sty'', et aussi celles du dossier permettant de construire la \doc "humaine" imitent celle du dossier du code \src. Ceci implique d'éviter d'utiliser deux fois le même nom de fichier pour le même contexte d'utilisation. Une bonne pratique consiste à utiliser un préfixe faisant \ref au bout de code implémenté.


caution::
    Bien importer les ressources via des chemins relatifs
    ((
        Mais normalement nous le faisons tous... Non ?
    )).
