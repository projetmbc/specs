this::
    date = 2023-11-09


================
Principe général
================

Pour certains \projs, il est nécessaire de faire appel à des fichiers ressources : fichiers de \conf pour localiser du texte, images, graphiques \tikz... \etc.
Ceci se fait très naturellement lors du codage à condition de savoir comment seront recollés les différents morceaux dans le \proj final afin d'éviter certaines déconvenues.


Considérons l'exemple fictif suivant où les dossiers path::''images'' et path::''graphics'' sont utilisés par les fichiers ext::''tex'' destinés à fabriquer la \doc "humaine"
((
    On aborde ce sujet dans cf::''?/archi/the-docs.txt''.
)),
tandis que les fichiers de \cfg path::''speval.cfg'' et path::''stdval.cfg''
((
    Contrairement à ce que laisse penser leur extension, ces fichiers peuvent contenir du code \latex. On en reparle juste après.
))
ne sont utiles qu'au code \src du \pack.


dirtree::
    ---
    path = ?/example/resource/dirtree-init.txt
    ---


Après analyse de \texfacto, deux dossiers path::''fict-proj/fictproj''
((
    Noter la normalisation du nom verb::''fict-proj'' en verb::''fictproj'', ce dernier étant accepté par \latex.
)),
et path::''fict-proj/.tmpdoc'' seront créés, ou mis à jour ; nous aurons alors le contenu suivant
((
    L'utilité du dossier path::''.tmpdoc'' est donnée dans cf::''?/archi/the-docs.txt''.
)),
pour un \proj avec une \doc "humaine" tapée en français.


dirtree::
    ---
    path = ?/example/resource/dirtree-final.txt
    ---


Voici les pièges tendus par la procédure d'automatisation (en cas de souci, \texfacto lèvera un message d'erreur).

    1) \Ttes les ressources sont à placer au même niveau que les fichiers ext::''sty'' \etou ext::''cls'' du code \src
    ((
        Se souvenir que \tex utilise une \struct virtuelle plate.
    )).
    Même pour du code \latex, il faut utiliser l'extension ext:''cfg''
    ((
        C'est imposé par \texfacto.
    )),
    ainsi que le préfixe path::''fictproj-''
    ((
        Ceci sert à éviter des conflits de noms du point de vue "platiste" de \tex. \texfacto vous laisse libre de suivre, ou non, cette \2nde règle. De grâce, soyez responsable !
    )).

    1) L'import des fichiers de \cfg est un peu particulier. Par exemple, dans le fichier path::''alpha.sty'', on pourrait avoir besoin de ''\input{../alpha-et-omega3/speval.cfg}''.
    Ceci permet de produire localement sans danger
    ((
        Nous sommes tous des codeurs résponsables... Enfin, je l'espère.
    ))
    des bouts de code important de façon relative d'autres bouts de code.
    Dans le code final, une importation comme ''\input{../alpha-et-omega3/speval.cfg}'' sera transformée en ''\input{speval.cfg}''
    ((
        Comme \tex utilise une \struct virtuelle plane, l'emploi de ''..'' dans un ''\input'' ouvre une brèche de \secu.
        En effet, le ''..'' est relatif au processus \tex sur la machine de l'utilisateur final. Aïe !
    )).

    1) Enfin, la \struct des ressources pour le fichier final path::''fictproj.sty'', ainsi que celles du dossier permettant de construire la \doc "humaine" imitent \ttes les deux celle du dossier du code \src. Ceci implique d'éviter d'utiliser deux fois le même nom de fichier pour le même contexte d'utilisation.


caution::
    Bien importer les ressources via des chemins relatifs
    ((
        Mais normalement nous le faisons tous... Non ?
    )).
