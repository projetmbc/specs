this::
    date = 2023-10-02


abrev::
    doxygen = cf::``Doxygen ;
                    https://www.doxygen.nl/index.html``


================================
Pour le "hacker", du bien arride
================================

Beaucoup de langages de \prog proposent des outils pour documenter son code directement dans le \src : on pense par exemple aux docstrings de \python ou au support de \doxygen en \c et en \php.
Cette idée est excellente à condition de se limiter à la rédaction d'une \doc \tech donnant des caractéristiques telles que la \sign d'une \fonc par exemple, mais ceci ne doit surtout pas servir à rédiger une \doc au complet comme nous le verrons dans la section suivante
((
    L'auteur de ce \docu utilise \tnsdoc qui permet, via une syntaxe intuitive de produire une \doc \tech.
)).


Voyons ce que cela donne avec \tnsdoc (rien n'empêche d'utiliser un autre outil bien entendu).
Ce qui est important dans les exemples proposés c'est de noter le minimalisme des \infos fournies.
Pour un code \js, on procèderait comme suit où l'on détourne les commentaires multilignes js::``/* ... */`` en js::``/*** ... ***/`` afin d'indiquer l'usage de la syntaxe proposée par \tnsdoc
((
     Noter dans cet exemple et le suivant que la syntaxe de \tnsdoc ne nuit en rien à la compréhension des codes.
)).

js::
    /***
    this::
        date   = 2023-06-11
        author = Christophe, BAL

    One very small and unnecessary script.
    ***/

    /***
    prototype::
        x : a number to be squared
          @ is_float

        :return: the square of the number ``x``
               @ is_float

    Is this doc very useful? ;-)
    ***/
    function square(x) {
        var y = x^2;

        return y;
    }


Voici un autre exemple via \tnsdoc pour \latex. Ce dernier ne propose que latex::``%`` pour commenter ligne par ligne, ce système de commentaires est ici détourné en latex::``%%%`` pour aiguiller \tnsdoc.

latex::
    %%%
    % this::
    %     date   = 2023-06-11
    %     author = Christophe, BAL
    %
    % Just for showing how to do without multiline comments.
    %%%

    %%%
    % prototype::
    %     :return: a constant token list
    %            @ is_text
    %%%
    \NewDocumentCommand\mymacro{}{Do something !}


warning::
    Rappelons qu'il faut bien veiller à ne donner que des \infos \techs minimales pour ne pas avoir plus de \doc que de lignes de code et garder les détails pour la \doc non \tech "amicale"
    ((
        Toutes mes excuses aux adeptes de la \prog littérale que l'auteur trouve catastrophique du point de vue d'un utiliseur peu aguerri.
    )),
    voir la section suivante pour ce dernier point.
