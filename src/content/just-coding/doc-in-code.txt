this::
    date = 2023-05-18


abrev::
    doxygen = cf::``Doxygen ;
                    https://www.doxygen.nl/index.html``


===================
Documenter son code
===================

Beaucoup de langages de ¨prog proposent des outils pour documenter son code directement dans le code lui-même : on pense par exemple aux docstrings de ¨python ou au support de ¨doxygen en ¨c et en ¨php.
Ce principe utile est repris mais via un outil "maison" nommé ¨tnsdoc  en cours de développement. Ce dernier permet via une syntaxe, non encore figée, de produire une ¨doc ¨tech destinée à des codeurs, et non à des utilisateurs d'un projet.


Comment ¨tnsdoc fonctionne-t-il ? Une ¨info ¨tech s'indiquera en commençant un commentaire avec trois fois le dernier caractère du texte marquant le début du commentaire, et pour la fin éventuelle on triplera le ¨1er caractère.


Voici un ¨1er exemple lorsque l'on dispose de commentaires multilignes : avec le ¨js, il est possible d'employer js::``/* ... */``.

js::
    /***
    this::
        date   = 2023-05-18
        author = Christophe, BAL

    One very small and unnecessary script.
    ***/

    /***
    prototype::
        x : ``x`` is a number to be squared
          @ is_float

        :return: the square of the number ``x``
               @ is_float

    Is this doc very useful ? ;-)
    ***/
    function square(x) {
        var y = x^2;

        return y;
    }


Le ¨2eme exemple ci-après montre comment faire lorsque le langage ne propose pas de commentaire multiligne : avec ¨latex, on dispose juste de latex::``%`` pour commenter une unique ligne. Noter au passage que la syntaxe précédente et la suivante ne nuisent en rien à la compréhension des codes.

latex::
    %%%
    % this::
    %     date   = 2023-05-18
    %     author = Christophe, BAL
    %
    % Just for showing how to do without multiline comments.
    %%%
    \NewDocumentCommand\mymacro{}{Do something !}


warning::
    Veiller à ne donner que des ¨infos ¨techs minimales pour ne pas avoir plus de ¨doc que de lignes de code et garder les détails pour une ¨doc non ¨tech externe
    ((
        Toutes mes excuses aux adeptes de la ¨prog littérale que l'auteur trouve catastrophique pour un simple utiliseur.
    )).
